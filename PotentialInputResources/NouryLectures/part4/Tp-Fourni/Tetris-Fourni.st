(MaDrawingArea subclass: #TsAfficheurTerrain	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tetris')forward: {}!!TsAfficheurTerrain methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/17/2015 21:57'!dessinerCarreEn: coordonneesCase couleurFond: couleurFond couleurBord: couleurBord 	| sommets |	sommets := self sommetsCarrePourCase: coordonneesCase.	self drawPolygon: sommets color: couleurFond borderWidth: 1 borderColor: couleurBord! !!TsAfficheurTerrain methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/17/2015 18:47'!couleurDeFond	^Color black! !!TsAfficheurTerrain methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/17/2015 18:47'!effacer	self fillWith: self couleurDeFond ! !!TsAfficheurTerrain methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/17/2015 21:26'!deltasSommets	^{0@0. 	self coteCarreEnPixel  @ 0. 	self coteCarreEnPixel @self coteCarreEnPixel . 	0@self coteCarreEnPixel }! !!TsAfficheurTerrain methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/17/2015 21:59'!effacerCarre: unCarre	self dessinerCarreEn: unCarre position couleurFond: self couleurDeFond  couleurBord: self couleurDeFond ! !!TsAfficheurTerrain methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/17/2015 21:25'!sommetsCarrePourCase: coordonneesCase	| origine |	origine := (coordonneesCase - 1) * self coteCarreEnPixel.	^self deltasSommets collect: [ :unSommet | unSommet + origine ]! !!TsAfficheurTerrain methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/17/2015 21:58'!dessinerCarre: unCarre	self dessinerCarreEn: unCarre position couleurFond: unCarre couleur couleurBord: Color gray ! !!TsAfficheurTerrain methodsFor: 'initialize - release' stamp: 'NouryBouraqadi 2/17/2015 21:25'!coteCarreEnPixel	^50! !!TsAfficheurTerrain methodsFor: 'initialize - release' stamp: 'NouryBouraqadi 2/17/2015 21:46'!terrain: unTerrain	self extent: (unTerrain largeur * self coteCarreEnPixel) @ (unTerrain hauteur * self coteCarreEnPixel).	unTerrain afficheur: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!TsAfficheurTerrain class	instanceVariableNames: ''!!TsAfficheurTerrain class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 2/17/2015 21:36'!pour: unTerrain	^self new		terrain: unTerrain;		yourself! !MaContainerMorph subclass: #TsContainerWithKeyboardSupport	instanceVariableNames: 'actionDictionary'	classVariableNames: ''	poolDictionaries: ''	category: 'Tetris'!!TsContainerWithKeyboardSupport methodsFor: 'event handling' stamp: 'NouryBouraqadi 2/17/2015 23:25'!mouseLeave: anEvent 	super mouseLeave: anEvent 	"anEvent hand newKeyboardFocus: nil"! !!TsContainerWithKeyboardSupport methodsFor: 'event handling' stamp: 'NouryBouraqadi 2/17/2015 22:59'!handlesMouseOver: evt	^true! !!TsContainerWithKeyboardSupport methodsFor: 'event handling' stamp: 'NouryBouraqadi 2/17/2015 23:00'!mouseEnter: anEvent 	anEvent hand newKeyboardFocus: self! !!TsContainerWithKeyboardSupport methodsFor: 'event handling' stamp: 'NouryBouraqadi 2/17/2015 23:18'!on: aCharacter do: actionBlock	actionDictionary at: aCharacter put: actionBlock ! !!TsContainerWithKeyboardSupport methodsFor: 'event handling' stamp: 'NouryBouraqadi 2/17/2015 23:20'!handlesKeyboard: evt	^actionDictionary keys includes: evt keyCharacter ! !!TsContainerWithKeyboardSupport methodsFor: 'event handling' stamp: 'NouryBouraqadi 2/17/2015 23:12'!keyStroke: evt	(actionDictionary at: evt keyCharacter) value! !!TsContainerWithKeyboardSupport methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 2/17/2015 23:07'!initialize	super initialize.	actionDictionary := Dictionary new! !(MaComposite subclass: #TsTetris	instanceVariableNames: 'terrain pieceCourante affichage process compteurScore'	classVariableNames: ''	poolDictionaries: ''	category: 'Tetris')forward: {}!!TsTetris methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/17/2015 22:01'!pieceCourante: anObject	pieceCourante := anObject! !!TsTetris methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/17/2015 22:01'!pieceCourante	^ pieceCourante! !!TsTetris methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/17/2015 18:45'!name	^'Tetris Mines Douai'! !!TsTetris methodsFor: 'jouer' stamp: 'NouryBouraqadi 2/18/2015 10:30'!nouvellePartie	self terminerPartieEnCours.	compteurScore reset.	self viderTerrain.	self jouer.! !!TsTetris methodsFor: 'jouer' stamp: 'NouryBouraqadi 2/18/2015 10:32'!jouer	process := [[terrain peutAccepterUneNouvellePiece] whileTrue: [  		self prendreUneNouvellePiece.		[self pieceCourante peutAvancerVersLeBas] whileTrue: [			1 second wait.			self pieceCourante avancerVersLeBas.			]		]	] forkAt: Processor userInterruptPriority! !!TsTetris methodsFor: 'jouer' stamp: 'NouryBouraqadi 2/18/2015 10:31'!terminerPartieEnCours	process ifNil: [ ^self ].	process terminate! !!TsTetris methodsFor: 'jouer' stamp: 'NouryBouraqadi 2/18/2015 10:25'!prendreUneNouvellePiece	compteurScore increment.	self pieceCourante: (TsBarre deLargeur: (1 to: 4) atRandom).	self pieceCourante terrain: terrain.! !!TsTetris methodsFor: 'jouer' stamp: 'NouryBouraqadi 2/17/2015 18:47'!viderTerrain	terrain libererToutesLesCases.	affichage effacer! !!TsTetris methodsFor: 'initialize - release' stamp: 'NouryBouraqadi 2/17/2015 21:38'!largeurTerrainParDefaut	^8! !!TsTetris methodsFor: 'initialize - release' stamp: 'NouryBouraqadi 2/18/2015 10:30'!initialize	| afficheurScore boutonNouvellePartie barreControle |	super initialize.	terrain := TsTerrain deHauteur: self hauteurTerrainParDefaut deLargeur: self largeurTerrainParDefaut.	affichage := TsAfficheurTerrain pour: terrain.	compteurScore := MaCounter new.	afficheurScore := MaStringDisplay new.	afficheurScore 		fontSize: 16.	compteurScore connect: #countPort to: #contents: of: afficheurScore.	compteurScore reset.	boutonNouvellePartie := MaSimpleButton newWithLabel: 'Nouvelle Partie'.	boutonNouvellePartie 		color: Color lightGray;		fontSize: 16;		connect: #clickPort to: #nouvellePartie of: self.	barreControle := MaContainerMorph newRow.	barreControle 		color: Color white;		addMorph: boutonNouvellePartie;		addSpaceFiller;		addMorph: afficheurScore.	container := TsContainerWithKeyboardSupport newColumn.	container 		color: self defaultBackgroundColor;		addMorph: barreControle;		addMorph: affichage.	container on: Character arrowLeft do: [ self pieceCourante avancerVersLaGauche  ].	container on: Character arrowRight do: [ self pieceCourante avancerVersLaDroite  ].	"container on: Character arrowUp do: [ self pieceCourante rotation  ]."		"container on: #keyStroke send: #value to: [ self pieceCourante avancerVersLaDroite  ]."! !!TsTetris methodsFor: 'initialize - release' stamp: 'NouryBouraqadi 2/17/2015 21:38'!hauteurTerrainParDefaut	^10! !!TsTetris methodsFor: 'running' stamp: 'NouryBouraqadi 2/18/2015 10:15'!basicStart	super basicStart.	self nouvellePartie.	self currentHand  newKeyboardFocus: self view! !!TsTetris methodsFor: 'running' stamp: 'NouryBouraqadi 2/18/2015 10:31'!basicStop	self terminerPartieEnCours.	super basicStop! !