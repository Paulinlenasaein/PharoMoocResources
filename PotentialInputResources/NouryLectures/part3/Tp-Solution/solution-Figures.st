MaWindowedApp subclass: #FenetreDessin	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Figures'!!FenetreDessin commentStamp: '<historical>' prior: 0!Une instance de FenetreDessin est une fenêtre sur laquelle on peut dessiner.Vous pouvez créer une telle fenêtre et l'afficher à l'aide du message demarrer. Le protocole dessiner comporte plusieurs méthodes pour effectuer des dessin.---- Exemple|maFenetre|maFenetre := FenetreDessin ouvrir.maFenetre 	dessinerPolygone: { 50@50. 150@50. 100@100}	remplissage: Color green 	epaisseurTrait: 5	couleurTrait: Color magenta!!FenetreDessin methodsFor: 'dessiner' stamp: 'NouryBouraqadi 2/13/2014 09:53'!dessinerEllipseEntre: coinSuperieurGauche et: coinInferieurDroit remplissage: couleurRemplissage epaisseurTrait: epaisseurTrait couleurTrait: couleurTrait	self morphDeDessin drawOvalFrom: coinSuperieurGauche to: coinInferieurDroit color: couleurRemplissage borderWidth: epaisseurTrait borderColor: couleurTrait! !!FenetreDessin methodsFor: 'dessiner' stamp: 'NouryBouraqadi 2/13/2014 09:38'!dessinerLigneDe: pointDepart a: pointArrivee epaisseur: epaisseurTrait couleur: couleurTrait	self morphDeDessin drawLineFrom: pointDepart to: pointArrivee borderWidth: epaisseurTrait borderColor: couleurTrait! !!FenetreDessin methodsFor: 'dessiner' stamp: 'NouryBouraqadi 2/13/2014 09:52'!dessinerContourEllipseEntre: coinSuperieurGauche et: coinInferieurDroit epaisseurTrait: epaisseurTrait couleurTrait: couleurTrait	self morphDeDessin drawFrameOvalFrom: coinSuperieurGauche to: coinInferieurDroit borderWidth: epaisseurTrait borderColor: couleurTrait! !!FenetreDessin methodsFor: 'dessiner' stamp: 'NouryBouraqadi 2/13/2014 09:48'!dessinerContourPolygone: sommets epaisseurTrait: epaisseurTrait couleurTrait: couleurTrait	self morphDeDessin drawFramePolygon: sommets borderWidth: epaisseurTrait borderColor: couleurTrait! !!FenetreDessin methodsFor: 'dessiner' stamp: 'NouryBouraqadi 2/13/2014 09:47'!dessinerPolygone: sommets remplissage: couleurRemplissage epaisseurTrait: epaisseurTrait couleurTrait: couleurTrait	self morphDeDessin drawPolygon: sommets color: couleurRemplissage borderWidth: epaisseurTrait borderColor: couleurTrait! !!FenetreDessin methodsFor: 'initialisation' stamp: 'NouryBouraqadi 2/13/2014 09:36'!dimensionsParDefaut	^600@480! !!FenetreDessin methodsFor: 'initialisation' stamp: 'NouryBouraqadi 2/13/2014 09:35'!classMorphPourDessin	^MaScribbleMorph! !!FenetreDessin methodsFor: 'initialisation' stamp: 'NouryBouraqadi 2/13/2014 09:39'!initialize	super initialize.	self morphDeDessin: self classMorphPourDessin new.	self morphDeDessin extent: self dimensionsParDefaut! !!FenetreDessin methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/13/2014 09:39'!morphDeDessin	^self upperLevelView! !!FenetreDessin methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/13/2014 09:39'!morphDeDessin: nouveauMorph	^self upperLevelView: nouveauMorph! !!FenetreDessin methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/13/2014 11:19'!name	^'Dessin'! !!FenetreDessin methodsFor: 'dessiner' stamp: 'NouryBouraqadi 2/13/2014 09:53'!dessinerEllipseEntre: coinSuperieurGauche et: coinInferieurDroit remplissage: couleurRemplissage epaisseurTrait: epaisseurTrait couleurTrait: couleurTrait	self morphDeDessin drawOvalFrom: coinSuperieurGauche to: coinInferieurDroit color: couleurRemplissage borderWidth: epaisseurTrait borderColor: couleurTrait! !!FenetreDessin methodsFor: 'dessiner' stamp: 'NouryBouraqadi 2/13/2014 09:38'!dessinerLigneDe: pointDepart a: pointArrivee epaisseur: epaisseurTrait couleur: couleurTrait	self morphDeDessin drawLineFrom: pointDepart to: pointArrivee borderWidth: epaisseurTrait borderColor: couleurTrait! !!FenetreDessin methodsFor: 'dessiner' stamp: 'NouryBouraqadi 2/13/2014 09:52'!dessinerContourEllipseEntre: coinSuperieurGauche et: coinInferieurDroit epaisseurTrait: epaisseurTrait couleurTrait: couleurTrait	self morphDeDessin drawFrameOvalFrom: coinSuperieurGauche to: coinInferieurDroit borderWidth: epaisseurTrait borderColor: couleurTrait! !!FenetreDessin methodsFor: 'dessiner' stamp: 'NouryBouraqadi 2/13/2014 09:48'!dessinerContourPolygone: sommets epaisseurTrait: epaisseurTrait couleurTrait: couleurTrait	self morphDeDessin drawFramePolygon: sommets borderWidth: epaisseurTrait borderColor: couleurTrait! !!FenetreDessin methodsFor: 'dessiner' stamp: 'NouryBouraqadi 2/13/2014 09:47'!dessinerPolygone: sommets remplissage: couleurRemplissage epaisseurTrait: epaisseurTrait couleurTrait: couleurTrait	self morphDeDessin drawPolygon: sommets color: couleurRemplissage borderWidth: epaisseurTrait borderColor: couleurTrait! !!FenetreDessin methodsFor: 'initialisation' stamp: 'NouryBouraqadi 2/13/2014 09:36'!dimensionsParDefaut	^600@480! !!FenetreDessin methodsFor: 'initialisation' stamp: 'NouryBouraqadi 2/13/2014 09:35'!classMorphPourDessin	^MaScribbleMorph! !!FenetreDessin methodsFor: 'initialisation' stamp: 'NouryBouraqadi 2/13/2014 09:39'!initialize	super initialize.	self morphDeDessin: self classMorphPourDessin new.	self morphDeDessin extent: self dimensionsParDefaut! !!FenetreDessin methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/13/2014 09:39'!morphDeDessin	^self upperLevelView! !!FenetreDessin methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/13/2014 09:39'!morphDeDessin: nouveauMorph	^self upperLevelView: nouveauMorph! !!FenetreDessin methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/13/2014 11:19'!name	^'Dessin'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!FenetreDessin class	instanceVariableNames: ''!!FenetreDessin class commentStamp: '<historical>' prior: 0!!!FenetreDessin class methodsFor: 'creation' stamp: 'NouryBouraqadi 2/13/2014 22:16'!ouvrir	"Crée et ouvre une fenêtre"	^self run	! !!FenetreDessin class methodsFor: 'creation' stamp: 'NouryBouraqadi 2/13/2014 22:16'!ouvrir	"Crée et ouvre une fenêtre"	^self run	! !Object subclass: #Figure	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Figures'!!Figure commentStamp: '<historical>' prior: 0!!!Figure methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/20/2014 10:21'!effacerSur: uneFenetre	self subclassResponsibility! !!Figure methodsFor: 'affichage' stamp: 'Noury 2/6/2008 14:02'!translater: delta	self subclassResponsibility! !!Figure methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/20/2014 10:18'!dessinerSur: uneFenetre	self subclassResponsibility! !!Figure methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/26/2014 08:49'!dessiner	self dessinerSur: FenetreDessin ouvrir ! !!Figure methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/20/2014 10:21'!effacerSur: uneFenetre	self subclassResponsibility! !!Figure methodsFor: 'affichage' stamp: 'Noury 2/6/2008 14:02'!translater: delta	self subclassResponsibility! !!Figure methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/20/2014 10:18'!dessinerSur: uneFenetre	self subclassResponsibility! !!Figure methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/26/2014 08:49'!dessiner	self dessinerSur: FenetreDessin ouvrir ! !Figure subclass: #FigureSimple	instanceVariableNames: 'couleur'	classVariableNames: ''	poolDictionaries: ''	category: 'Figures'!!FigureSimple commentStamp: '<historical>' prior: 0!!!FigureSimple methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/20/2014 15:44'!effacerSur: uneFenetre	| couleurDessin |	couleurDessin := self couleur.	self couleur: Color white.	self dessinerSur: uneFenetre.	self couleur: couleurDessin! !!FigureSimple methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/13/2014 22:52'!printOn: unStream	unStream		nextPutAll: self className;		crtab;		nextPutAll: '- couleur : ';		nextPutAll: self couleur name;		crtab;		nextPutAll: ' - position : ';		print: self position! !!FigureSimple methodsFor: 'geometry' stamp: 'NouryBouraqadi 2/13/2014 22:34'!deplacer: unPoint	self subclassResponsibility! !!FigureSimple methodsFor: 'geometry' stamp: 'NouryBouraqadi 2/13/2014 22:27'!translater: delta	self deplacer: self position + delta! !!FigureSimple methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 22:27'!couleur	^ couleur! !!FigureSimple methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 22:27'!couleur: anObject	couleur := anObject! !!FigureSimple methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 22:34'!position	self subclassResponsibility! !!FigureSimple methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 2/13/2014 22:27'!couleurParDefaut	^ Color red! !!FigureSimple methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 2/13/2014 22:33'!initialize	super initialize.	self couleur: self couleurParDefaut! !!FigureSimple methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/20/2014 15:44'!effacerSur: uneFenetre	| couleurDessin |	couleurDessin := self couleur.	self couleur: Color white.	self dessinerSur: uneFenetre.	self couleur: couleurDessin! !!FigureSimple methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/13/2014 22:52'!printOn: unStream	unStream		nextPutAll: self className;		crtab;		nextPutAll: '- couleur : ';		nextPutAll: self couleur name;		crtab;		nextPutAll: ' - position : ';		print: self position! !!FigureSimple methodsFor: 'geometry' stamp: 'NouryBouraqadi 2/13/2014 22:34'!deplacer: unPoint	self subclassResponsibility! !!FigureSimple methodsFor: 'geometry' stamp: 'NouryBouraqadi 2/13/2014 22:27'!translater: delta	self deplacer: self position + delta! !!FigureSimple methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 22:27'!couleur	^ couleur! !!FigureSimple methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 22:27'!couleur: anObject	couleur := anObject! !!FigureSimple methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 22:34'!position	self subclassResponsibility! !!FigureSimple methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 2/13/2014 22:27'!couleurParDefaut	^ Color red! !!FigureSimple methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 2/13/2014 22:33'!initialize	super initialize.	self couleur: self couleurParDefaut! !FigureSimple subclass: #Segment	instanceVariableNames: 'origine extremite'	classVariableNames: ''	poolDictionaries: ''	category: 'Figures'!!Segment commentStamp: '<historical>' prior: 0!!!Segment methodsFor: 'accessing' stamp: 'Noury 2/6/2008 14:27'!extremite	^ extremite! !!Segment methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 22:45'!origine: pointDepart extremite: pointArrivee 	origine := pointDepart.	extremite := pointArrivee.! !!Segment methodsFor: 'accessing' stamp: 'Noury 2/6/2008 14:43'!longueur	^self origine dist: self extremite! !!Segment methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 22:46'!position	^self origine! !!Segment methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 22:51'!origine	^origine! !!Segment methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/26/2014 08:58'!dessinerSur: uneFenetre	uneFenetre 		dessinerLigneDe: self origine 		a:  self extremite 		epaisseur: 2 		couleur: self couleur! !!Segment methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/13/2014 22:52'!printOn: unStream	super printOn: unStream.	unStream		crtab;		nextPutAll: ' - longueur : ';		print: self longueur! !!Segment methodsFor: 'geometry' stamp: 'NouryBouraqadi 2/13/2014 22:42'!deplacer: unPoint	| delta |	delta := unPoint - self origine.	self origine: unPoint extremite: self extremite + delta.! !!Segment methodsFor: 'accessing' stamp: 'Noury 2/6/2008 14:27'!extremite	^ extremite! !!Segment methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 22:45'!origine: pointDepart extremite: pointArrivee 	origine := pointDepart.	extremite := pointArrivee.! !!Segment methodsFor: 'accessing' stamp: 'Noury 2/6/2008 14:43'!longueur	^self origine dist: self extremite! !!Segment methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 22:46'!position	^self origine! !!Segment methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 22:51'!origine	^origine! !!Segment methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/26/2014 08:58'!dessinerSur: uneFenetre	uneFenetre 		dessinerLigneDe: self origine 		a:  self extremite 		epaisseur: 2 		couleur: self couleur! !!Segment methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/13/2014 22:52'!printOn: unStream	super printOn: unStream.	unStream		crtab;		nextPutAll: ' - longueur : ';		print: self longueur! !!Segment methodsFor: 'geometry' stamp: 'NouryBouraqadi 2/13/2014 22:42'!deplacer: unPoint	| delta |	delta := unPoint - self origine.	self origine: unPoint extremite: self extremite + delta.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Segment class	instanceVariableNames: ''!!Segment class commentStamp: '<historical>' prior: 0!!!Segment class methodsFor: 'creation' stamp: 'NouryBouraqadi 2/13/2014 23:13'!origine: pointDepart extremite: pointArrivee 	^self new		origine: pointDepart extremite: pointArrivee ;		yourself! !!Segment class methodsFor: 'creation' stamp: 'NouryBouraqadi 2/13/2014 23:13'!origine: pointDepart extremite: pointArrivee 	^self new		origine: pointDepart extremite: pointArrivee ;		yourself! !FigureSimple subclass: #Polygone	instanceVariableNames: 'sommets'	classVariableNames: ''	poolDictionaries: ''	category: 'Figures'!!Polygone commentStamp: '<historical>' prior: 0!!!Polygone methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/26/2014 09:04'!sommets: uneCollectionOrdonnee	sommets := uneCollectionOrdonnee! !!Polygone methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 22:55'!sommets	^ sommets! !!Polygone methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 23:22'!position	^sommets first! !!Polygone methodsFor: 'geometry' stamp: 'NouryBouraqadi 2/13/2014 22:58'!deplacer: unPoint	| delta nouveauxSommets |	delta := unPoint - self position.	nouveauxSommets := self sommets collect: [:ancienSommet|		ancienSommet + delta].	self sommets: nouveauxSommets! !!Polygone methodsFor: 'geometry' stamp: 'NouryBouraqadi 2/13/2014 23:25'!segments	| origines extremites |	origines := self sommets.	extremites := self sommets allButFirst copyWith: self sommets first.	^origines with: extremites collect: [ :depart :arrivee| 		Segment new			origine: depart extremite: arrivee;			couleur: self couleur;			yourself]	! !!Polygone methodsFor: 'geometry' stamp: 'NouryBouraqadi 2/26/2014 09:13'!perimetre	^self segments inject: 0 into: [ :perimetre :unSegment| 												perimetre + unSegment longueur]	"|total|	total := 0.	self segments do: [ :unSegment| total := total + unSegment  longueur].	^total"! !!Polygone methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/13/2014 23:08'!dessinerSur: fenetre	self segments do: [ :unSegment| 		unSegment dessinerSur: fenetre ]! !!Polygone methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/13/2014 23:08'!printOn: unStream	super printOn: unStream.	unStream		crtab;		nextPutAll: '- perimetre : ';		print: self perimetre! !!Polygone methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/26/2014 09:04'!sommets: uneCollectionOrdonnee	sommets := uneCollectionOrdonnee! !!Polygone methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 22:55'!sommets	^ sommets! !!Polygone methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/13/2014 23:22'!position	^sommets first! !!Polygone methodsFor: 'geometry' stamp: 'NouryBouraqadi 2/13/2014 22:58'!deplacer: unPoint	| delta nouveauxSommets |	delta := unPoint - self position.	nouveauxSommets := self sommets collect: [:ancienSommet|		ancienSommet + delta].	self sommets: nouveauxSommets! !!Polygone methodsFor: 'geometry' stamp: 'NouryBouraqadi 2/13/2014 23:25'!segments	| origines extremites |	origines := self sommets.	extremites := self sommets allButFirst copyWith: self sommets first.	^origines with: extremites collect: [ :depart :arrivee| 		Segment new			origine: depart extremite: arrivee;			couleur: self couleur;			yourself]	! !!Polygone methodsFor: 'geometry' stamp: 'NouryBouraqadi 2/26/2014 09:13'!perimetre	^self segments inject: 0 into: [ :perimetre :unSegment| 												perimetre + unSegment longueur]	"|total|	total := 0.	self segments do: [ :unSegment| total := total + unSegment  longueur].	^total"! !!Polygone methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/13/2014 23:08'!dessinerSur: fenetre	self segments do: [ :unSegment| 		unSegment dessinerSur: fenetre ]! !!Polygone methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/13/2014 23:08'!printOn: unStream	super printOn: unStream.	unStream		crtab;		nextPutAll: '- perimetre : ';		print: self perimetre! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Polygone class	instanceVariableNames: ''!!Polygone class commentStamp: '<historical>' prior: 0!!!Polygone class methodsFor: 'creation' stamp: 'NouryBouraqadi 2/26/2014 09:16'!sommets: desPoints 	"|nouveauPolygone|	nouveauPolygone := self new.	nouveauPolygone sommets: desPoints.	^nouveauPolygone"	^self new		sommets: desPoints;		yourself! !!Polygone class methodsFor: 'creation' stamp: 'NouryBouraqadi 2/26/2014 09:19'!carreDeCote: longueur 		^self rectangleLargeur: longueur hauteur: longueur ! !!Polygone class methodsFor: 'creation' stamp: 'NouryBouraqadi 2/26/2014 09:18'!rectangleLargeur: longueurEnX hauteur: longueurEnY 	|coins|	coins := OrderedCollection with: 0@0.	coins add: longueurEnX@0.	coins add: longueurEnX@longueurEnY.	coins add: 0@longueurEnY.	^self sommets: coins! !!Polygone class methodsFor: 'creation' stamp: 'NouryBouraqadi 2/26/2014 09:16'!sommets: desPoints 	"|nouveauPolygone|	nouveauPolygone := self new.	nouveauPolygone sommets: desPoints.	^nouveauPolygone"	^self new		sommets: desPoints;		yourself! !!Polygone class methodsFor: 'creation' stamp: 'NouryBouraqadi 2/26/2014 09:19'!carreDeCote: longueur 		^self rectangleLargeur: longueur hauteur: longueur ! !!Polygone class methodsFor: 'creation' stamp: 'NouryBouraqadi 2/26/2014 09:18'!rectangleLargeur: longueurEnX hauteur: longueurEnY 	|coins|	coins := OrderedCollection with: 0@0.	coins add: longueurEnX@0.	coins add: longueurEnX@longueurEnY.	coins add: 0@longueurEnY.	^self sommets: coins! !Figure subclass: #FigureComplexe	instanceVariableNames: 'sousFigures'	classVariableNames: ''	poolDictionaries: ''	category: 'Figures'!!FigureComplexe commentStamp: '<historical>' prior: 0!!!FigureComplexe methodsFor: 'accessing' stamp: 'Noury 2/6/2008 15:15'!ajouterFigure: uneFigure	self sousFigures add: uneFigure! !!FigureComplexe methodsFor: 'accessing' stamp: 'Noury 2/6/2008 15:14'!sousFigures	^ sousFigures! !!FigureComplexe methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/26/2014 09:25'!enleverFigure: uneFigure	self sousFigures remove: uneFigure ifAbsent: [ ]! !!FigureComplexe methodsFor: 'accessing' stamp: 'Noury 2/6/2008 15:14'!sousFigures: anObject	sousFigures := anObject! !!FigureComplexe methodsFor: 'initialize-release' stamp: 'Noury 2/6/2008 15:14'!initialize	super initialize.	self sousFigures: Set new! !!FigureComplexe methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/20/2014 10:22'!effacerSur: uneFenetere	self sousFigures do: [:uneFigure| 		uneFigure effacerSur: uneFenetere]	! !!FigureComplexe methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/13/2014 11:23'!dessinerSur: uneFenetere	self sousFigures do: [:uneFigure| 		uneFigure dessinerSur: uneFenetere]	! !!FigureComplexe methodsFor: 'geometry' stamp: 'Noury 2/6/2008 15:17'!translater: delta	self sousFigures do: [:figure| 		figure translater: delta]! !!FigureComplexe methodsFor: 'accessing' stamp: 'Noury 2/6/2008 15:15'!ajouterFigure: uneFigure	self sousFigures add: uneFigure! !!FigureComplexe methodsFor: 'accessing' stamp: 'Noury 2/6/2008 15:14'!sousFigures	^ sousFigures! !!FigureComplexe methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/26/2014 09:25'!enleverFigure: uneFigure	self sousFigures remove: uneFigure ifAbsent: [ ]! !!FigureComplexe methodsFor: 'accessing' stamp: 'Noury 2/6/2008 15:14'!sousFigures: anObject	sousFigures := anObject! !!FigureComplexe methodsFor: 'initialize-release' stamp: 'Noury 2/6/2008 15:14'!initialize	super initialize.	self sousFigures: Set new! !!FigureComplexe methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/20/2014 10:22'!effacerSur: uneFenetere	self sousFigures do: [:uneFigure| 		uneFigure effacerSur: uneFenetere]	! !!FigureComplexe methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/13/2014 11:23'!dessinerSur: uneFenetere	self sousFigures do: [:uneFigure| 		uneFigure dessinerSur: uneFenetere]	! !!FigureComplexe methodsFor: 'geometry' stamp: 'Noury 2/6/2008 15:17'!translater: delta	self sousFigures do: [:figure| 		figure translater: delta]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!FigureComplexe class	instanceVariableNames: ''!!FigureComplexe class commentStamp: '<historical>' prior: 0!!!FigureComplexe class methodsFor: 'exemples' stamp: 'NouryBouraqadi 2/26/2014 09:29'!maison	|maison toit corps|	corps := Polygone rectangleLargeur: 80 hauteur: 100.	corps couleur: Color blue.	corps deplacer: 10@51.	toit := Polygone sommets: {0@50 . 50@0. 100@50}.	toit couleur: Color red.	maison:= FigureComplexe new.	maison ajouterFigure: toit.	maison ajouterFigure: corps.	^maison		! !!FigureComplexe class methodsFor: 'exemples' stamp: 'NouryBouraqadi 2/13/2014 23:29'!village|village m|village := self new.0 to: 5 do: [:i | 	m := self maison.	m translater: (i*100)@(i*50).	village ajouterFigure: m].	^village.! !!FigureComplexe class methodsFor: 'exemples' stamp: 'NouryBouraqadi 2/26/2014 09:29'!maison	|maison toit corps|	corps := Polygone rectangleLargeur: 80 hauteur: 100.	corps couleur: Color blue.	corps deplacer: 10@51.	toit := Polygone sommets: {0@50 . 50@0. 100@50}.	toit couleur: Color red.	maison:= FigureComplexe new.	maison ajouterFigure: toit.	maison ajouterFigure: corps.	^maison		! !!FigureComplexe class methodsFor: 'exemples' stamp: 'NouryBouraqadi 2/13/2014 23:29'!village|village m|village := self new.0 to: 5 do: [:i | 	m := self maison.	m translater: (i*100)@(i*50).	village ajouterFigure: m].	^village.! !