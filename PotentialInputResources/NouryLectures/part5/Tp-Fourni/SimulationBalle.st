Object subclass: #AfficheurGraphiqueDeBalle	instanceVariableNames: 'disque estAffiche'	classVariableNames: ''	poolDictionaries: ''	category: 'SimulationBalle'!!AfficheurGraphiqueDeBalle commentStamp: '<historical>' prior: 0!Un AfficheurGraphiqueDeLampe gère un disque de couleur qui représente graphiquement la lampe.Instance Variables	disque:		<EllipseMorph>disque	- objet graphique qui représente la lampe!!AfficheurGraphiqueDeBalle methodsFor: 'initialization' stamp: 'NouryBouraqadi 2/25/2014 18:40'!initialize	disque := EllipseMorph new.	disque width: 70.	disque height: disque width.	estAffiche := false.	self demarrerAffichage! !!AfficheurGraphiqueDeBalle methodsFor: 'accesseurs' stamp: 'Noury 1/18/2009 18:29'!disque	^disque! !!AfficheurGraphiqueDeBalle methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/25/2014 17:30'!position	|nouvelY |	nouvelY := World extent y - disque center y.	^disque center x@ nouvelY! !!AfficheurGraphiqueDeBalle methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/25/2014 18:41'!position: unPoint	| nouvelY anciennePosition  |	anciennePosition := self position.	anciennePosition = unPoint ifTrue: [ ^self ].	nouvelY := World extent y - unPoint y.	disque center: (unPoint x@ nouvelY).	estAffiche		ifTrue: [ self demarrerAffichage ].	"Permet de tout le temps voir l'afficheur au dessus des fenêtres"! !!AfficheurGraphiqueDeBalle methodsFor: 'observation' stamp: 'NouryBouraqadi 2/25/2014 17:31'!mettreAJourApresDeplacement: evenementDeplacement	self position: evenementDeplacement nouvellePosition	! !!AfficheurGraphiqueDeBalle methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/25/2014 17:21'!arreterAffichage	estAffiche := false.	disque delete! !!AfficheurGraphiqueDeBalle methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/25/2014 17:22'!demarrerAffichage	estAffiche := true.	disque openInWorld! !(MaNaturalReferentialDrawingArea subclass: #Courbe	instanceVariableNames: 'epaisseurTrait couleurTrait'	classVariableNames: ''	poolDictionaries: ''	category: 'SimulationBalle')forward: {}!!Courbe methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/23/2015 15:50'!facteurEchelle	^ DisplayScreen actualScreenSize / self extent ! !!Courbe methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/25/2014 12:40'!epaisseurTrait: anObject	epaisseurTrait := anObject! !!Courbe methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/25/2014 12:40'!couleurTrait	^ couleurTrait! !!Courbe methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/25/2014 12:40'!couleurTrait: anObject	couleurTrait := anObject! !!Courbe methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/25/2014 12:27'!name	^'Courbe'! !!Courbe methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/25/2014 12:40'!epaisseurTrait	^ epaisseurTrait! !!Courbe methodsFor: 'observateur' stamp: 'NouryBouraqadi 2/23/2015 15:49'!tracerLignePourDeplacement: evenementDeplacement	| origineAlEchelle extremiteAlEchelle     |	origineAlEchelle := evenementDeplacement anciennePosition / self facteurEchelle.	extremiteAlEchelle := evenementDeplacement nouvellePosition / self facteurEchelle.	self tracerLigneDe: origineAlEchelle vers: extremiteAlEchelle! !!Courbe methodsFor: 'initialisation' stamp: 'NouryBouraqadi 2/25/2014 12:46'!dimensionsParDefaut	^640@480! !!Courbe methodsFor: 'initialisation' stamp: 'NouryBouraqadi 2/25/2014 12:46'!epaisseurTraitParDefaut	^2! !!Courbe methodsFor: 'initialisation' stamp: 'NouryBouraqadi 2/25/2014 12:46'!couleurTraitParDefaut	^Color red! !!Courbe methodsFor: 'initialisation' stamp: 'NouryBouraqadi 2/23/2015 16:17'!initialize	super initialize.	self epaisseurTrait: self epaisseurTraitParDefaut.	self couleurTrait: self couleurTraitParDefaut.	self extent: self dimensionsParDefaut.	self start! !!Courbe methodsFor: 'dessiner' stamp: 'NouryBouraqadi 2/23/2015 15:48'!effacer	self fillWith: self fillColor! !!Courbe methodsFor: 'dessiner' stamp: 'NouryBouraqadi 2/23/2015 15:51'!tracerLigneDe: origine vers: extremite	self drawLineFrom: origine to: extremite width: self epaisseurTrait color: self couleurTrait! !Object subclass: #Simulation	instanceVariableNames: 'balle afficheur courbe thread'	classVariableNames: ''	poolDictionaries: ''	category: 'SimulationBalle'!!Simulation commentStamp: '<historical>' prior: 0!A SimulationBalleSimple is xxxxxxxxx.Instance Variables	afficheur:		<Object>	balle:		<Object>	courbe:		<Object>afficheur	- xxxxxballe	- xxxxxcourbe	- xxxxx!!Simulation methodsFor: 'simuler' stamp: 'NouryBouraqadi 3/13/2014 10:20'!reinitialiserSimulation	self positionBalle: self positionInitialeBalle.	self vitesseBalle: self vitesseInitialeBalle.	self effacerCourbe! !!Simulation methodsFor: 'simuler' stamp: 'NouryBouraqadi 3/13/2014 10:10'!lancerSimulation	thread ifNotNil: [self arreterSimulation].	thread := [		self reinitialiserSimulation.		self boucleSimulation] newProcess.	thread name: self className.	thread resume		! !!Simulation methodsFor: 'simuler' stamp: 'NouryBouraqadi 2/23/2015 16:24'!fautilArreterLaSimulation	| rectangleFenetrePharo |	rectangleFenetrePharo := (0@0) corner: DisplayScreen actualScreenSize.	^(rectangleFenetrePharo containsPoint: balle position) not! !!Simulation methodsFor: 'simuler' stamp: 'NouryBouraqadi 3/13/2014 10:05'!boucleSimulation	|attente|	attente := 100 milliSeconds asDelay.	[self fautilArreterLaSimulation] whileFalse: [		attente wait.		self unPasDeSimulation]	! !!Simulation methodsFor: 'simuler' stamp: 'NouryBouraqadi 3/13/2014 10:15'!unPasDeSimulation	balle position y < 0 ifTrue: [^self reinitialiserSimulation].	balle unPasDeSimulation! !!Simulation methodsFor: 'simuler' stamp: 'NouryBouraqadi 3/14/2014 14:28'!arreterSimulation	thread ifNil: [ ^self ].	thread terminate.	thread := nil! !!Simulation methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/23/2015 16:52'!arreterAffichage	afficheur arreterAffichage.	courbe stop! !!Simulation methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/23/2015 16:53'!demarrerAffichage	afficheur demarrerAffichage.	courbe start! !!Simulation methodsFor: 'affichage' stamp: 'NouryBouraqadi 3/13/2014 09:59'!effacerCourbe	courbe effacer! !!Simulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 3/13/2014 10:09'!initialize	super initialize.	balle:= self classeBalle new.	afficheur := self classeAfficheur new.	courbe := self classeCourbe new.	balle annonceur 		on: EvenementDeplacement send: #mettreAJourApresDeplacement: to: afficheur.	self reinitialiserSimulation.	balle annonceur 		on: EvenementDeplacement send: #tracerLignePourDeplacement: to: courbe.! !!Simulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 3/13/2014 10:10'!classeBalle	self subclassResponsibility! !!Simulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 3/13/2014 09:59'!vitesseBalle: vecteurVitesse 	balle vitesse: vecteurVitesse! !!Simulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 3/13/2014 09:59'!classeCourbe	^Courbe! !!Simulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 3/13/2014 10:20'!vitesseInitialeBalle	^30@ -50! !!Simulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 3/13/2014 09:59'!classeAfficheur	^AfficheurGraphiqueDeBalle! !!Simulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 3/13/2014 10:19'!positionInitialeBalle	^100@500! !!Simulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 3/13/2014 09:59'!positionBalle: unPoint 	balle position: unPoint! !