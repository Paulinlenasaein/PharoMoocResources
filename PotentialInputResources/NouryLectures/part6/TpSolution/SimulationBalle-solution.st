Object subclass: #Simulation	instanceVariableNames: 'balle afficheur thread'	classVariableNames: ''	poolDictionaries: ''	category: 'SimulationBalle'!!Simulation commentStamp: '<historical>' prior: 0!A SimulationBalleSimple is xxxxxxxxx.Instance Variables	afficheur:		<Object>	balle:		<Object>	courbe:		<Object>afficheur	- xxxxxballe	- xxxxxcourbe	- xxxxx!!Simulation methodsFor: 'affichage' stamp: 'NouryBouraqadi 3/3/2015 18:08'!arreterAffichage	afficheur arreterAffichage! !!Simulation methodsFor: 'affichage' stamp: 'NouryBouraqadi 3/3/2015 18:08'!demarrerAffichage	afficheur demarrerAffichage.! !!Simulation methodsFor: 'simuler' stamp: 'NouryBouraqadi 3/13/2014 10:15'!unPasDeSimulation	balle position y < 0 ifTrue: [^self reinitialiserSimulation].	balle unPasDeSimulation! !!Simulation methodsFor: 'simuler' stamp: 'NouryBouraqadi 3/3/2015 18:38'!boucleSimulation	|attente|	attente := 100 milliSeconds asDelay.	[attente wait.	self unPasDeSimulation] repeat	! !!Simulation methodsFor: 'simuler' stamp: 'NouryBouraqadi 3/3/2015 19:05'!lancerSimulation	thread ifNotNil: [self arreterSimulation].	thread := [		self boucleSimulation] newProcess.	thread name: self className.	thread priority: Processor userInterruptPriority.	thread resume		! !!Simulation methodsFor: 'simuler' stamp: 'NouryBouraqadi 3/14/2014 14:28'!arreterSimulation	thread ifNil: [ ^self ].	thread terminate.	thread := nil! !!Simulation methodsFor: 'initailize-release' stamp: 'NouryBouraqadi 3/3/2015 18:21'!initialize	super initialize.	balle:= self classeBalle new.	afficheur := self classeAfficheur new.	afficheur position: balle position.	balle annonceur 		on: EvenementDeplacement send: #mettreAJourApresDeplacement: to: afficheur! !!Simulation methodsFor: 'initailize-release' stamp: 'NouryBouraqadi 3/13/2014 10:10'!classeBalle	self subclassResponsibility! !!Simulation methodsFor: 'initailize-release' stamp: 'NouryBouraqadi 3/13/2014 09:59'!classeAfficheur	^AfficheurGraphiqueDeBalle! !Object subclass: #BalleSimple	instanceVariableNames: 'position annonceur vitesse'	classVariableNames: ''	poolDictionaries: ''	category: 'SimulationBalle'!!BalleSimple methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/25/2014 12:20'!vitesse: anObject	vitesse := anObject! !!BalleSimple methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/25/2014 12:20'!vitesse	^ vitesse! !!BalleSimple methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/24/2014 18:10'!annonceur	^ annonceur! !!BalleSimple methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/24/2014 18:10'!annonceur: anObject	annonceur := anObject! !!BalleSimple methodsFor: 'accessing' stamp: 'NouryBouraqadi 1/27/2011 16:16'!position	^position! !!BalleSimple methodsFor: 'accessing' stamp: 'NouryBouraqadi 3/3/2015 18:07'!position: nouvellePosition	| anciennePosition evenement  positionMaxi |	nouvellePosition y < 0 ifTrue: [^self position: nouvellePosition x@0].	nouvellePosition x < 0 ifTrue: [ ^self position: 0 @ nouvellePosition y ].	positionMaxi := self positionMaxi.
	nouvellePosition y > positionMaxi y ifTrue: [ ^self position: nouvellePosition x @  positionMaxi y].	nouvellePosition x > positionMaxi x ifTrue: [ ^self position:  positionMaxi x @nouvellePosition y].
	anciennePosition := self position.	position := nouvellePosition.	anciennePosition ifNil: [ ^self ].	evenement := EvenementDeplacement anciennePosition: anciennePosition nouvellePosition: nouvellePosition.	self annonceur announce: evenement! !!BalleSimple methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 3/3/2015 18:05'!positionMaxi 	^DisplayScreen actualScreenSize.	! !!BalleSimple methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 2/25/2014 18:22'!initialize 	super initialize.	self vitesse: self vitesseParDefaut.	self position: self positionParDefaut.	self annonceur: self classeAnnonceur new! !!BalleSimple methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 3/3/2015 18:11'!positionParDefaut	| positionMaxi |	positionMaxi := self positionMaxi.	^(0 to: positionMaxi x) atRandom @(0 to: positionMaxi y) atRandom! !!BalleSimple methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 2/24/2014 18:10'!classeAnnonceur	^Announcer! !!BalleSimple methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 3/3/2015 18:20'!vitesseParDefaut	| valeursPossibles |	valeursPossibles := (-70 to: -50) , (50 to: 70).	^valeursPossibles atRandom @ valeursPossibles atRandom! !!BalleSimple methodsFor: 'observation' stamp: 'NouryBouraqadi 2/25/2014 17:39'!prendreEnCompteDeplacement: evenementDeplacement	self position: evenementDeplacement nouvellePosition! !!BalleSimple methodsFor: 'simulation' stamp: 'NouryBouraqadi 2/25/2014 17:17'!unPasDeSimulation 	self position: self position + self vitesse! !BalleSimple subclass: #BalleRebondissante	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'SimulationBalle'!!BalleRebondissante methodsFor: 'accesing' stamp: 'NouryBouraqadi 3/3/2015 17:54'!unPasDeSimulation	super unPasDeSimulation.	self rebondir! !!BalleRebondissante methodsFor: 'accesing' stamp: 'NouryBouraqadi 3/3/2015 18:07'!rebondir	| positionMaxi |	self position ifNil: [ ^self ].	self vitesse ifNil: [ ^self ].	(self position y = 0 and: [ self vitesse y < 0]) ifTrue: [		^self vitesse: self vitesse x @ self vitesse y negated].	(self position x= 0 and: [ self vitesse x < 0]) ifTrue: [		^self vitesse: self vitesse x negated @ self vitesse y].
	positionMaxi := self positionMaxi.		(self position y = positionMaxi y and: [ self vitesse y > 0]) ifTrue: [		^self vitesse: self vitesse x @ self vitesse y negated].	(self position x= positionMaxi x and: [ self vitesse x > 0]) ifTrue: [		^self vitesse: self vitesse x negated @ self vitesse y].! !Object subclass: #SimulationPlusieursBalles	instanceVariableNames: 'balles afficheurs thread'	classVariableNames: ''	poolDictionaries: ''	category: 'SimulationBalle'!!SimulationPlusieursBalles methodsFor: 'initailize-release' stamp: 'NouryBouraqadi 3/3/2015 18:57'!initialize	| balle afficheur |	super initialize.	balles := Set new.	afficheurs := Set new.	self nombreBalles timesRepeat: [		balle:= self classeBalle new.		balles add: balle.		afficheur := self classeAfficheur new.		afficheurs add: afficheur.		afficheur position: balle position.		balle annonceur 			on: EvenementDeplacement send: #mettreAJourApresDeplacement: to: afficheur]! !!SimulationPlusieursBalles methodsFor: 'initailize-release' stamp: 'NouryBouraqadi 3/3/2015 18:37'!classeBalle	^BalleRebondissante ! !!SimulationPlusieursBalles methodsFor: 'initailize-release' stamp: 'NouryBouraqadi 3/3/2015 18:35'!classeAfficheur	^AfficheurGraphiqueDeBalle! !!SimulationPlusieursBalles methodsFor: 'initailize-release' stamp: 'NouryBouraqadi 3/3/2015 18:59'!nombreBalles	^50! !!SimulationPlusieursBalles methodsFor: 'affichage' stamp: 'NouryBouraqadi 3/3/2015 18:39'!arreterAffichage	afficheurs do: [:afficheur | afficheur arreterAffichage]! !!SimulationPlusieursBalles methodsFor: 'affichage' stamp: 'NouryBouraqadi 3/3/2015 18:39'!demarrerAffichage	afficheurs do: [:afficheur | afficheur demarrerAffichage]! !!SimulationPlusieursBalles methodsFor: 'simuler' stamp: 'NouryBouraqadi 3/3/2015 18:42'!unPasDeSimulation	balles do: [:balle| balle unPasDeSimulation]! !!SimulationPlusieursBalles methodsFor: 'simuler' stamp: 'NouryBouraqadi 3/3/2015 18:48'!lancerSimulation	thread ifNotNil: [self arreterSimulation].	thread := [		self boucleSimulation] newProcess.	thread name: self className.	thread priority: Processor userBackgroundPriority.	thread resume! !!SimulationPlusieursBalles methodsFor: 'simuler' stamp: 'NouryBouraqadi 3/3/2015 19:03'!boucleSimulation	|attente|	attente := (100//self nombreBalles)  milliSeconds asDelay.	[attente wait.	self unPasDeSimulation] repeat	! !!SimulationPlusieursBalles methodsFor: 'simuler' stamp: 'NouryBouraqadi 3/3/2015 18:35'!arreterSimulation	thread ifNil: [ ^self ].	thread terminate.	thread := nil! !TestCase subclass: #TestBalleSimple	instanceVariableNames: 'balle'	classVariableNames: ''	poolDictionaries: ''	category: 'SimulationBalle'!!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 17:04'!assertUnPasSimPointInitial:  pointDepart vitesseInitiale:  vitesseInitiale pointFinal: pointArrivee	self 		assertUnPasSimPointInitial: pointDepart 		vitesseInitiale: vitesseInitiale 		pointFinal: pointArrivee 		vitesseFinale: vitesseInitiale! !!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 16:39'!testChangemntPositionX73Y64VersX21Ymoins34DonneX21Y0	balle position: 73@64.	balle position: 21@ -34.		self assert: balle position equals: 21@0! !!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 16:34'!setUp 	super setUp.	balle := BalleSimple new! !!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 17:01'!testUnPasSimulationDepartX10Y10VitesseX3Y2ArriveeX13Y12	self assertUnPasSimPointInitial: 10@10 vitesseInitiale: 3@2 pointFinal: 13@12! !!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 16:40'!testChangemntPositionX86Y29VersX30Y40DonneX3Y40	balle position: 86@29.	balle position: 30@40.		self assert: balle position equals: 30@40! !!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 17:09'!testUnPasSimulationDepartX34Y4VitesseX21Ymoins10ArriveeX55Y0	self assertUnPasSimPointInitial: 34@4 vitesseInitiale: 21@ -10 pointFinal: 55@0! !!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:36'!testUnPasSimulationDepartX35Y0VitesseX10Ymoins7ArriveeX45Y0	self assertUnPasSimPointInitial: 35@0 vitesseInitiale: 10@ -7 pointFinal: 45@0! !!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 17:09'!testUnPasSimulationDepartX42Y10VitesseX8Ymoins9ArriveeX50Y1	self assertUnPasSimPointInitial: 42@10 vitesseInitiale: 8@ -9 pointFinal: 50@1! !!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:16'!testUnPasSimulationDepartX38Y0VitesseX2Y10ArriveeX40Y10	self assertUnPasSimPointInitial: 38@0 vitesseInitiale: 2@10 pointFinal: 40@10! !!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 17:00'!testUnPasSimulationDepartX23Y50VitesseXmoins3Y5ArriveeX20Y55	self assertUnPasSimPointInitial: 23@50 vitesseInitiale: -3@5 pointFinal: 20@55! !!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 16:40'!testVitesseInitialeX0Ymoins1	self assert: balle vitesse equals: 0@ -1! !!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 17:14'!testUnPasSimulationDepartX100Y0VitesseX0Ymoins5ArriveeX100Y0	self assertUnPasSimPointInitial: 100@0 vitesseInitiale: 0@ -5 pointFinal: 100@0! !!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 17:01'!testUnPasSimulationDepartX20Y20VitesseXmoins5Y6ArriveeX15Y26	self assertUnPasSimPointInitial: 20@20 vitesseInitiale: -5@6 pointFinal: 15@26! !!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 17:06'!assertUnPasSimPointInitial: pointDepart vitesseInitiale: vitesseInitiale pointFinal: pointArrivee vitesseFinale: vitesseArrivee	balle vitesse: vitesseInitiale.	balle position: pointDepart.	balle unPasDeSimulation.	self assert: balle position equals: pointArrivee.	self assert: balle vitesse equals: vitesseArrivee! !!TestBalleSimple methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 16:36'!testPositionInitialeX0Y0	self assert: balle position equals: 0@0! !Object subclass: #AfficheurGraphiqueDeBalle	instanceVariableNames: 'disque estAffiche'	classVariableNames: ''	poolDictionaries: ''	category: 'SimulationBalle'!!AfficheurGraphiqueDeBalle commentStamp: '<historical>' prior: 0!Un AfficheurGraphiqueDeLampe gère un disque de couleur qui représente graphiquement la lampe.Instance Variables	disque:		<EllipseMorph>disque	- objet graphique qui représente la lampe!!AfficheurGraphiqueDeBalle methodsFor: 'accesseurs' stamp: 'Noury 1/18/2009 18:29'!disque	^disque! !!AfficheurGraphiqueDeBalle methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/25/2014 17:30'!position	|nouvelY |	nouvelY := World extent y - disque center y.	^disque center x@ nouvelY! !!AfficheurGraphiqueDeBalle methodsFor: 'accesseurs' stamp: 'NouryBouraqadi 2/25/2014 18:41'!position: unPoint	| nouvelY anciennePosition  |	anciennePosition := self position.	anciennePosition = unPoint ifTrue: [ ^self ].	nouvelY := World extent y - unPoint y.	disque center: (unPoint x@ nouvelY).	estAffiche		ifTrue: [ self demarrerAffichage ].	"Permet de tout le temps voir l'afficheur au dessus des fenêtres"! !!AfficheurGraphiqueDeBalle methodsFor: 'initialization' stamp: 'NouryBouraqadi 3/3/2015 18:50'!initialize	disque := EllipseMorph new.	disque color: { Color yellow. Color blue. Color green. Color purple. Color red. Color pink. Color cyan } atRandom.	disque width: 70.	disque height: disque width.	estAffiche := false.	self demarrerAffichage! !!AfficheurGraphiqueDeBalle methodsFor: 'observation' stamp: 'NouryBouraqadi 2/25/2014 17:31'!mettreAJourApresDeplacement: evenementDeplacement	self position: evenementDeplacement nouvellePosition	! !!AfficheurGraphiqueDeBalle methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/25/2014 17:21'!arreterAffichage	estAffiche := false.	disque delete! !!AfficheurGraphiqueDeBalle methodsFor: 'affichage' stamp: 'NouryBouraqadi 2/25/2014 17:22'!demarrerAffichage	estAffiche := true.	disque openInWorld! !Simulation subclass: #SimulationBalleRebondissante	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'SimulationBalle'!!SimulationBalleRebondissante methodsFor: 'initialize - release' stamp: 'NouryBouraqadi 2/25/2014 18:52'!classeBalle	^BalleRebondissante ! !TestCase subclass: #TestMiseAJourAffichageBalle	instanceVariableNames: 'balle afficheur'	classVariableNames: ''	poolDictionaries: ''	category: 'SimulationBalle'!!TestMiseAJourAffichageBalle methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:47'!setUp	super setUp.	balle := BalleSimple new.	afficheur := AfficheurGraphiqueDeBalle new.	balle annonceur 		on: EvenementDeplacement send: #mettreAJourApresDeplacement: to: afficheur! !!TestMiseAJourAffichageBalle methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:51'!testPositionAfficheurMiseAJourAvecCelleDeLaBalle	(-100 to: 100 by: 25) do: [ :x|		(-100 to: 100 by: 25) do: [:y |		balle position: x@y.		self assert: afficheur position equals: balle position	]]! !!TestMiseAJourAffichageBalle methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:39'!tearDown	super tearDown.	afficheur arreterAffichage! !Simulation subclass: #SimulationBalleSimple	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'SimulationBalle'!!SimulationBalleSimple methodsFor: 'initailize-release' stamp: 'NouryBouraqadi 3/13/2014 10:12'!classeBalle	^BalleSimple! !TestCase subclass: #TestBalleRebondissante	instanceVariableNames: 'balle'	classVariableNames: ''	poolDictionaries: ''	category: 'SimulationBalle'!!TestBalleRebondissante commentStamp: '<historical>' prior: 0!A TestBalleSimple is xxxxxxxxx.Instance Variables	balle:		<Object>balle	- xxxxx!!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:08'!assertUnPasSimPointInitial:  pointDepart vitesseInitiale:  vitesseInitiale pointFinal: pointArrivee	self 		assertUnPasSimPointInitial: pointDepart 		vitesseInitiale: vitesseInitiale 		pointFinal: pointArrivee 		vitesseFinale: vitesseInitiale! !!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:08'!testChangemntPositionX73Y64VersX21Ymoins34DonneX21Y0	balle position: 73@64.	balle position: 21@ -34.		self assert: balle position equals: 21@0! !!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:08'!setUp 	super setUp.	balle := BalleRebondissante new! !!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:08'!testUnPasSimulationDepartX10Y10VitesseX3Y2ArriveeX13Y12	self assertUnPasSimPointInitial: 10@10 vitesseInitiale: 3@2 pointFinal: 13@12! !!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:08'!testChangemntPositionX86Y29VersX30Y40DonneX3Y40	balle position: 86@29.	balle position: 30@40.		self assert: balle position equals: 30@40! !!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:17'!testUnPasSimulationDepartX34Y4VitesseX21Ymoins10ArriveeX55Y0	self assertUnPasSimPointInitial: 34@4 vitesseInitiale: 21@ -10 pointFinal: 55@0 vitesseFinale: 21@5! !!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:36'!testUnPasSimulationDepartX35Y0VitesseX10Ymoins7ArriveeX45Y0	self assertUnPasSimPointInitial: 35@0 vitesseInitiale: 10@ -7 pointFinal: 45@0 vitesseFinale: 10@3! !!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:08'!testUnPasSimulationDepartX42Y10VitesseX8Ymoins9ArriveeX50Y1	self assertUnPasSimPointInitial: 42@10 vitesseInitiale: 8@ -9 pointFinal: 50@1! !!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:16'!testUnPasSimulationDepartX38Y0VitesseX2Y10ArriveeX40Y10	self assertUnPasSimPointInitial: 38@0 vitesseInitiale: 2@10 pointFinal: 40@10! !!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:08'!testUnPasSimulationDepartX23Y50VitesseXmoins3Y5ArriveeX20Y55	self assertUnPasSimPointInitial: 23@50 vitesseInitiale: -3@5 pointFinal: 20@55! !!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:08'!testVitesseInitialeX0Ymoins1	self assert: balle vitesse equals: 0@ -1! !!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:23'!testUnPasSimulationDepartX100Y0VitesseX0Ymoins5ArriveeX100Y0	self assertUnPasSimPointInitial: 100@0 vitesseInitiale: 0@ -5 pointFinal: 100@0 vitesseFinale: 0@2! !!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:08'!testUnPasSimulationDepartX20Y20VitesseXmoins5Y6ArriveeX15Y26	self assertUnPasSimPointInitial: 20@20 vitesseInitiale: -5@6 pointFinal: 15@26! !!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:08'!assertUnPasSimPointInitial: pointDepart vitesseInitiale: vitesseInitiale pointFinal: pointArrivee vitesseFinale: vitesseArrivee	balle vitesse: vitesseInitiale.	balle position: pointDepart.	balle unPasDeSimulation.	self assert: balle position equals: pointArrivee.	self assert: balle vitesse equals: vitesseArrivee! !!TestBalleRebondissante methodsFor: 'tests' stamp: 'NouryBouraqadi 2/25/2014 18:08'!testPositionInitialeX0Y0	self assert: balle position equals: 0@0! !Announcement subclass: #EvenementDeplacement	instanceVariableNames: 'anciennePosition nouvellePosition'	classVariableNames: ''	poolDictionaries: ''	category: 'SimulationBalle'!!EvenementDeplacement methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/25/2014 11:56'!anciennePosition: anObject	anciennePosition := anObject! !!EvenementDeplacement methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/25/2014 11:56'!deltaPosition	^self nouvellePosition - self anciennePosition! !!EvenementDeplacement methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/25/2014 11:56'!anciennePosition	^ anciennePosition! !!EvenementDeplacement methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/25/2014 11:56'!nouvellePosition: anObject	nouvellePosition := anObject! !!EvenementDeplacement methodsFor: 'accessing' stamp: 'NouryBouraqadi 2/25/2014 11:56'!nouvellePosition	^ nouvellePosition! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EvenementDeplacement class	instanceVariableNames: ''!!EvenementDeplacement class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 2/25/2014 12:05'!anciennePosition: anciennePosition nouvellePosition: nouvellePosition	^self new		anciennePosition: anciennePosition;		nouvellePosition: nouvellePosition;		yourself! !